import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.red700,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              24,
            ),
          ),
          shadowColor: appTheme.red8003f,
          elevation: 4,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: colorScheme.onPrimaryContainer.withOpacity(1),
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: appTheme.gray500,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              8,
            ),
          ),
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.gray900,
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.gray500,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: appTheme.pink300,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        bodyLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray500,
          fontSize: getFontSize(
            11,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: appTheme.deepPurpleA200,
          fontSize: getFontSize(
            57,
          ),
          fontFamily: 'Lobster',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            44,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.deepPurpleA200,
          fontSize: getFontSize(
            22,
          ),
          fontFamily: 'Lobster',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            34,
          ),
          fontFamily: 'Metropolis',
          fontWeight: FontWeight.w700,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    background: Color(0X87223263),
    error: Color(0XFF151867),
    errorContainer: Color(0XFF5B61F4),
    inversePrimary: Color(0X87223263),
    inverseSurface: Color(0XFF151867),
    onBackground: Color(0XA2FFFFFF),
    onError: Color(0XFFB2B38E),
    onErrorContainer: Color(0XFF350E12),
    onInverseSurface: Color(0XFFB2B38E),
    onPrimary: Color(0XFF151867),
    onPrimaryContainer: Color(0XA2FFFFFF),
    onSecondary: Color(0XA2FFFFFF),
    onSecondaryContainer: Color(0XFF151867),
    onSurface: Color(0XA2FFFFFF),
    onSurfaceVariant: Color(0XFF151867),
    onTertiary: Color(0XA2FFFFFF),
    onTertiaryContainer: Color(0XFF151867),
    outline: Color(0XFF151867),
    outlineVariant: Color(0X87223263),
    primary: Color(0XFF40BFFF),
    primaryContainer: Color(0X87223263),
    scrim: Color(0X87223263),
    secondary: Color(0X87223263),
    secondaryContainer: Color(0XFFB2B38E),
    shadow: Color(0XFF151867),
    surface: Color(0X87223263),
    surfaceTint: Color(0XFF151867),
    surfaceVariant: Color(0XFFB2B38E),
    tertiary: Color(0X87223263),
    tertiaryContainer: Color(0XFFB2B38E),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFFFC107);
  Color get amberA200 => Color(0XFFFFC940);
  Color get amberA400 => Color(0XFFFFCC00);
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue50 => Color(0XFFEAEFFF);
  Color get blueA200 => Color(0XFF4091FF);
  // BlueGray
  Color get blueGray300 => Color(0XFF9098B1);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray40001 => Color(0XFF8E8E92);
  Color get blueGray900 => Color(0XFF2C2C2C);
  // DeepOrange
  Color get deepOrangeA700 => Color(0XFFF01F0E);
  // DeepPurple
  Color get deepPurple50 => Color(0XFFEBE0FF);
  Color get deepPurple900 => Color(0XFF312280);
  Color get deepPurpleA200 => Color(0XFF864AFC);
  // Gray
  Color get gray100 => Color(0XFFF6F6F6);
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray40001 => Color(0XFFBEA8A8);
  Color get gray50 => Color(0XFFF9F9F9);
  Color get gray500 => Color(0XFF9B9B9B);
  Color get gray700 => Color(0XFF585858);
  Color get gray800 => Color(0XFF4F4F4F);
  Color get gray900 => Color(0XFF222222);
  // Green
  Color get green600 => Color(0XFF2AA952);
  // Indigo
  Color get indigo600 => Color(0XFF3B5998);
  Color get indigoA200 => Color(0XFF5B61F4);
  // LightBlue
  Color get lightBlue600 => Color(0XFF039BE5);
  // Orange
  Color get orange200 => Color(0XFFFEC88A);
  Color get orange300 => Color(0XFFFFBA48);
  // Pink
  Color get pink300 => Color(0XFFFB7181);
  // Red
  Color get red700 => Color(0XFFDB3022);
  Color get red900 => Color(0XFFBF180E);
  Color get red90001 => Color(0XFFB72222);
  Color get redA700 => Color(0XFFEB001B);
  // Redf
  Color get red8003f => Color(0X3FD32525);
  // Yellow
  Color get yellow700 => Color(0XFFFFC732);
  Color get yellow800 => Color(0XFFF79E1B);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
